pipeline {
    agent any

    environment {
        registryName = "aksregistrydevops"
        registryCredential = 'aksregistrydevops'
        registryUrl = 'aksregistrydevops.azurecr.io'
        resourceGroup = 'aks-resource-group'
        versionTag = "v${env.BUILD_ID}-${new Date().format('yyyyMMdd-HHmmss')}"
        K8S_NAMESPACE = 'default'  // Namespace where your deployment will go
        AZURE_SUBSCRIPTION_ID = '9a668e8f-ad3f-48a1-94cb-fbcf50b35167'
        K8S_CLUSTER = 'akscluster'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${registryName}:${versionTag}")
                }
            }
        }

        stage('Upload Image to ACR') {
            steps {
                script {
                    docker.withRegistry("https://${registryUrl}", registryCredential) {
                        dockerImage.push("${versionTag}")
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Replace the image placeholder with the actual image tag
                    sh """
                    sed -i 's|image: .*\${IMAGE_TAG}|image: ${registryUrl}/${registryName}:${versionTag}|' deployment.yaml
                    kubectl apply -f deployment.yaml
                    kubectl apply -f service.yaml
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()  // Clean workspace after pipeline execution
        }
    }
}
